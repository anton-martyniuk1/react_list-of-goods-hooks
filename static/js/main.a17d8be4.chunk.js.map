{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","goods","useState","sortType","setSortType","isReversed","setReverse","visibleGoods","sort","g1","g2","localeCompare","length","sortGoods","reverse","alphButtonClassNames","classNames","lengthButtonClassNames","reverseButtonClassNames","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"gPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,IAAMC,EAAK,UAAOF,GAClB,EAAgCG,mBAAS,QAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KAgCMC,EA9BY,WAChB,OAAQJ,GACN,IAAK,WACH,OAAOF,EAAMO,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAEjD,IAAK,SACH,OAAOT,EAAMO,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,UAE/C,QACE,OAAOX,GAqBQY,GAEjBR,GACFJ,EAAMa,UAGR,IAAMC,EAAuBC,IAC3B,iBACA,CAAE,WAAyB,aAAbb,IAGVc,EAAyBD,IAC7B,oBACA,CAAE,WAAyB,WAAbb,IAGVe,EAA0BF,IAC9B,oBACA,CAAE,YAAaX,IAGjB,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWJ,EACXM,QA5Ce,WACrBjB,EAAY,aAwCR,iCAQA,wBACEgB,KAAK,SACLD,UAAWF,EACXI,QAhDa,WACnBjB,EAAY,WA4CR,4BAQA,wBACEgB,KAAK,SACLD,UAAWD,EACXG,QApDkB,WACxBf,GAAYD,IAgDR,sBAQe,SAAbF,GAAuBE,IACvB,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAzDO,WACfjB,EAAY,QACZE,GAAW,IAoDL,sBAWJ,6BACE,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCjHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a17d8be4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const goods = [...goodsFromServer];\n  const [sortType, setSortType] = useState('none');\n  const [isReversed, setReverse] = useState(false);\n\n  const sortGoods = () => {\n    switch (sortType) {\n      case 'alphabet':\n        return goods.sort((g1, g2) => g1.localeCompare(g2));\n\n      case 'length':\n        return goods.sort((g1, g2) => g1.length - g2.length);\n\n      default:\n        return goods;\n    }\n  };\n\n  const sortByAlphabet = () => {\n    setSortType('alphabet');\n  };\n\n  const sortByLength = () => {\n    setSortType('length');\n  };\n\n  const changeReversState = () => {\n    setReverse(!isReversed);\n  };\n\n  const reseting = () => {\n    setSortType('none');\n    setReverse(false);\n  };\n\n  const visibleGoods = sortGoods();\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  const alphButtonClassNames = classNames(\n    'button is-info',\n    { 'is-light': sortType !== 'alphabet' },\n  );\n\n  const lengthButtonClassNames = classNames(\n    'button is-success',\n    { 'is-light': sortType !== 'length' },\n  );\n\n  const reverseButtonClassNames = classNames(\n    'button is-warning',\n    { 'is-light': !isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={alphButtonClassNames}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={lengthButtonClassNames}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={reverseButtonClassNames}\n          onClick={changeReversState}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== 'none' || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reseting}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}