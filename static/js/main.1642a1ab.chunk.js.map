{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","goods","useState","sortType","setSortType","isReversed","setReverse","sort","g1","g2","localeCompare","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"+NAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,IAAMC,EAAK,UAAOF,GAClB,EAAgCG,mBAAS,QAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KAmBA,OAAQH,GACN,IAAK,WACHF,EAAMM,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MACxC,MAEF,IAAK,SACHR,EAAMM,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,UAW1C,OAJIN,GACFJ,EAAMW,UAIN,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAiC,aAAbV,GAA2B,YACxDY,QAxCe,WACrBX,EAAY,aAoCR,iCAQA,wBACEU,KAAK,SACLD,UAAS,4BAAoC,WAAbV,GAAyB,YACzDY,QA5Ca,WACnBX,EAAY,WAwCR,4BAQA,wBACEU,KAAK,SACLD,UAAS,6BAAwBR,GAAc,YAC/CU,QAhDkB,WACxBT,GAAYD,IA4CR,sBAQe,SAAbF,GAAuBE,IACvB,wBACES,KAAK,SACLD,UAAU,4BACVE,QArDO,WACfX,EAAY,QACZE,GAAW,IAgDL,sBAWJ,6BACE,6BACGL,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC/FpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1642a1ab.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const goods = [...goodsFromServer];\n  const [sortType, setSortType] = useState('none');\n  const [isReversed, setReverse] = useState(false);\n\n  const sortByAlphabet = () => {\n    setSortType('alphabet');\n  };\n\n  const sortByLength = () => {\n    setSortType('length');\n  };\n\n  const changeReversState = () => {\n    setReverse(!isReversed);\n  };\n\n  const reseting = () => {\n    setSortType('none');\n    setReverse(false);\n  };\n\n  switch (sortType) {\n    case 'alphabet':\n      goods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n\n    case 'length':\n      goods.sort((g1, g2) => g1.length - g2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== 'alphabet' && 'is-light'}`}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== 'length' && 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={changeReversState}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== 'none' || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reseting}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}